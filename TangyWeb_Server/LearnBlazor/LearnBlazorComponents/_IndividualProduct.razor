<div class="bg-light border p-2 col-5" @onclick="(args)=>LastSelectProduct(args, Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4><br />
    Add to Favorite <input type="checkbox" @onchange="FavoriteUpdated"/><br />
    Name - @Product.Name<br />
    Show Properties: <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked": null)">
    <br>
    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeletButton IsActive=@Product.IsActive />
</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }
    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectProduct(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }

}
